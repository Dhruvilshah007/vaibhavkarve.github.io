#+title: Multiprocessing in Python
#+options: toc:2 H:2
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/stylesheet.css" />
#+subtitle: [[file:index.org][Home]]

- Python documentation :: [[https://docs.python.org/3/library/multiprocessing.html][multiprocessing module]]

* Introduction
The =multiprocessing= module (MP) spawns sub-processes insteads of threads.  Can be
used for data parallelism -- parallelizing the execution of a function
accross multiple input values by distributing the data accross
processes.

* Start methods
Can be set as follows.
#+name: set-start-method
#+attr_latex: :options label= (python3.8) (scratch) <<set-start-method>>
#+begin_src python :exports code :eval none
  import multiprocessing as mp

  def foo(q):
      pass

  if __name__ == '__main__':
      # using get_context() is preferred over set_start_method().
      ctx = mp.get_context('spawn')  # mp has custom Context object
				     # types.
      q = ctx.Queue()
      p = ctx.Process(target=foo, args=(q,))
#+end_src



=set_start_method()= should not be used more than once in the program.

** =spawn=
   Parent process starts a fresh python interpreter each time. This is
   the slowest option. Inherits only those objects that are needed by
   the =multiprocessing.Process.run= method.

** =fork=
   Parent process forks the python interpreter using =os.fork()=. All
   resources of the parent are inherited by the child process. This is
   faster then =spawn=.

   "Not safe if used on a multi-threading process" (I think this means
   that this method should not be used if we are also using the
   =threading= module?). Overall the fork start method can lead to
   crashes of the subprocess so it is unsafe.

   This is available on Unix only.

** =forkserver=
   When the program starts, using this method, a server process is
   also started. The fork server can fork a new process every time it
   is requested. The fork process server is single-threaded and so it
   is safely uses =os.fork()=. No unnecessary resources are inherited
   from the parent process.

   Similar to =fork=, this is available on Unix only.

** Verdict
   
   I will be using =forkserver= for my programs.

* Communication between processes
  MP allows exchange of objects between processes.
** Queue
